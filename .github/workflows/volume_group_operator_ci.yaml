
name: volume-group-operator-ci
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: 
      - opened
      - reopened
  issue_comment:                                     
    types:
      - created
  workflow_dispatch:
    inputs:
      production:
        description: 'Whether to push the image to the production registry or the staging registry'
        default: 'false'
        required: false
jobs:
  prepare_env: 
    if: contains(github.event.comment.body, '/comment')
    name: "Prepare env"
    runs-on: ubuntu-latest
    env:
      PRODUCTION: "${{ inputs.production }}"
      BUILD_NUMBER: "${{ github.run_number }}"
      REGISTRY: quay.io/csiblock/
      PROD_REPOSITORY: volume-group-opreator
      STAGING_REPOSITORY: volume-group-opreator-staging
      IMAGE_VERSION: '1.11.0'
    steps:
       - name: Checkout code
         uses: actions/checkout@v3.2.0
       - uses: FranzDiebold/github-env-vars-action@v2.7.0
       - name: Setup dependencies
         id: setup_dependencies
         run: |
           build/ci/github_actions/setup_ci_dependencies.sh
    outputs:
      volume_group_image_specific_tag: "${{ steps.setup_dependencies.outputs.volume_group_image_specific_tag }}"
      volume_group_image_branch_tag: "${{ steps.setup_dependencies.outputs.volume_group_image_branch_tag }}"

  build_and_push_images:
    if: contains(github.event.comment.body, '/comment')
    name: "Build and push images"
    runs-on: ubuntu-latest
    needs:
      - prepare_env
    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.2.1
      - name: Build and push volume-group-operator
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          platforms: linux/amd64,linux/ppc64le,linux/s390x
          push: false
          tags: |
            ${{ needs.prepare_env.outputs.volume_group_image_specific_tag }}
            ${{ needs.prepare_env.outputs.volume_group_image_branch_tag }}
          file: Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
